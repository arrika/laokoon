import org.gradle.api.artifacts.*

apply plugin: 'base' // To add "clean" task to the root project.

buildscript {
    repositories {
        maven {
            name "public4finance"
            url "http://nexus.4finance.net/content/groups/public/"
        }
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:0.8'
    }
}


subprojects {
    apply from: rootProject.file('common.gradle')
}

task mergedJavadoc(type: Javadoc, description: 'Creates Javadoc from all the projects.') {
    title = 'All modules'
    destinationDir = new File(project.buildDir, 'merged-javadoc')

    // Note: The closures below are executed lazily.
    source {
        subprojects*.sourceSets*.main*.allSource
    }
    classpath.from {
        subprojects*.configurations*.compile*.copyRecursive({ !(it instanceof ProjectDependency); })*.resolve()
    }
}

task wrapper(type: Wrapper, description: 'Creates and deploys the Gradle wrapper to the current directory.') {
    gradleVersion = '2.2.1'
}

project(':web') {
    apply plugin: 'shadow'

    configurations {
        shadowArchive {
            transitive = true
        }
    }

    dependencies {
        compile project(':web:jetty')
        compile project(':web:servlet')
        compile project(':web:spring')
        compile project(':web:api')

        shadowArchive 'com.google.code.guice:guice:1.0'
    }

    ext.shadowTask = tasks.getByPath('shadowJar')
    shadowTask.dependsOn {
        configurations.compile {
            extendsFrom configurations.shadowArchive
        }
    }

    shadow {
        exclude 'META-INF/*.RSA'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/maven/**/*'
        exclude 'META-INF/*.txt'
        exclude '*.html'
        exclude '*.txt'
    }

    jar {
        manifest {
            attributes 'Implementation-Title': 'Laokoon Web',
                    'Implementation-Version': version,
                    'Implementation-Vendor': 'skankjo',
                    'Built-By': System.getProperty('user.name'),
                    'Built-Date': new Date(),
                    'Built-JDK': System.getProperty('java.version'),
                    'Main-Class': 'lt.skankjo.laokoon.jetty.EmbeddedJetty'
        }
    }
}


